/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: nimzu (https://sketchfab.com/nimzuk)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/foxs-islands-163b68e09fcc47618450150be7785907
Title: Fox's islands
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useThree } from '@react-three/fiber';
import { a } from '@react-spring/three';

import { islandScene } from '../../assets/3d/gblExport'

const Island = (props: any) => {
  const islandRef: any = useRef();

  const { gl, viewport } = useThree();
  const { nodes, materials } = useGLTF(islandScene);

  const lastX = useRef(0);
  const rotationSpeed = useRef(0);
  const dampingFactor = 0.95;

  const handlePointerDown = (e: any) => {
    e.preventDefault();
    e.stopProgation();
    props.setIsRotating(true);

    const clientX = e.touches ? e.touches[0].clientX : e.clientX ;

    lastX.current = clientX;
  }

  const handlePointerUp = (e: any) => {
    e.preventDefault();
    e.stopProgation();
    props.setIsRotating(false);

    const clientX = e.touches ? e.touches[0].clientX : e.clientX ;

    const delta = (clientX - lastX.current) / viewport.width;

    islandRef.current.rotation.y += delta * 0.01 * Math.PI;
    lastX.current = clientX;
    rotationSpeed.current = delta * 0.01 * Math.PI;
  }

  const handlePointerMove = (e: any) => {
    e.preventDefault();
    e.stopProgation();

    if(props.isRotating) handlePointerUp(e)

  }

  return (
    <a.group {...props} ref={islandRef}>
      <mesh
        geometry={nodes.polySurface944_tree_body_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface945_tree1_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface946_tree2_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface947_tree1_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface948_tree_body_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.polySurface949_tree_body_0.geometry}
        material={materials.PaletteMaterial001}
      />
      <mesh
        geometry={nodes.pCube11_rocks1_0.geometry}
        material={materials.PaletteMaterial001}
      />
    </a.group>
  );
}

export default Island;

//useGLTF.preload("/island.glb");

// types
// shadows
// instance
// instance all
// verbose
// keep names
// keep groups
// meta
// precision
// autoRotate
// contactShadow
// light intensity
// preset
// rembrandt
// environment
// city

// Made by @NikkitaFTW & contributors inspired by the gltfjsx cli

